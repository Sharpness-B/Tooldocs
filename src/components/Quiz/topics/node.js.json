[{"question":"# Q1. When a javaScript function is invoked (called) in Node, where is a new frame placed?","options":[" the call stack"," the event loop"," the poll phase"," the events queue"],"anwserIndex":0,"answerText":" the call stack"},{"question":"# Q2. Which of the following is a core module in Node?","options":[" webpack"," crypto"," request"," chalk"],"anwserIndex":1,"answerText":" crypto"},{"question":"# Q3. Which of the following Buffer class methods returns an uninitialized buffer?","options":[" allocUnsafe"," concat"," from"," alloc"],"anwserIndex":0,"answerText":" allocUnsafe"},{"question":"# Q4. Which of the following modules is NOT a built-in module in Node?","options":[" ftp"," events"," dgram"," http2"],"anwserIndex":0,"answerText":" ftp"},{"question":"# Q5. Which fs module method can be used to read the content of a file without buffering it in memory?","options":[" read"," readFile"," createReadStream"," readFileSync","**Explanation:**","*From official docs: [https://nodejs.org/api/fs.html#fs_dir_read](https://nodejs.org/api/fs.html#fs_dir_read)","To minimize memory costs, when possible prefer streaming via fs.createReadStream().*"],"anwserIndex":2,"answerText":" createReadStream"},{"question":"# Q6. Which of the following DNS module methods uses the underlying OS facilities and does not necessarily perform any network communication?","options":[" lookup"," resolve"," resolve4"," reverse"],"anwserIndex":0,"answerText":" lookup"},{"question":"# Q7. How do you check that a value is a date object in Node?","options":[" util.types.isDate(value)"," assert.isDate(value)"," console.isDate(value)"," util.date(value)"],"anwserIndex":0,"answerText":" util.types.isDate(value)"},{"question":"# Q8. Can you create an https web server with Node.js?","options":[" no, there are no modules supporting it yet"," yes, with the https or http2 modules"," yes, through the path module"," yes, with the http module"],"anwserIndex":1,"answerText":" yes, with the https or http2 modules"},{"question":"# Q9. What is the Api that is designed to insulate Addons from changes in the underlying JavaScript engine?","options":[" A-API"," Z-API"," N-API"," X-API"],"anwserIndex":2,"answerText":" N-API"},{"question":"# Q10. Which CLI option can you use to debug a node script in Chrome DevTools?","options":[" --dev-tools"," --inspect"," --chrome"," --debug"],"anwserIndex":1,"answerText":" --inspect"},{"question":"# Q11. How can you count the number of logical CPUs on the machine that is running Node?","options":[" node -p \"process.cpus\""," node -p \"util.cpus().size\""," node -p \"process.os.cpus\""," node -p \"os.cpus().length\""],"anwserIndex":3,"answerText":" node -p \"os.cpus().length\""},{"question":"# Q12. Which of the following is a method on the console obejct?","options":[" exit"," test"," time"," print"],"anwserIndex":2,"answerText":" time"},{"question":"# Q13. Which object is used to manage the cache of required modules?","options":[" global.cache"," module.cache"," process.cache"," require.cache"],"anwserIndex":3,"answerText":" require.cache"},{"question":"# Q14. What is the command to silence all process warnings?","options":[" node index.js --trace-warnings"," node --no-warnings"," node -trace-warnings"," node index.js --no-warnings"],"anwserIndex":1,"answerText":" node --no-warnings"},{"question":"# Q15. How can you use the promise API with a callback-based function like child_process.exec?","options":[" new Promise(child_process.exec())"," util.promisify(child_process.exec())"," util.promisify(child_process.exec)"," new Promise(child_process.exec)"],"anwserIndex":2,"answerText":" util.promisify(child_process.exec)"},{"question":"# Q16. Which of the following is NOT a Node repl command?","options":[" .brake"," .history"," .editor"," .save"],"anwserIndex":1,"answerText":" .history"},{"question":"# Q17. Which statement is true when you run the code shown below?","options":["require('child_process').fork('script.js');"," The forked process shares the event loop with the parent process"," A new VM instance is created and the two VM instances will be shared between the forked process and the parent process."," The forked process will have its own VM instance."," The forked process shares the same VM thread with the parent process."],"anwserIndex":3,"answerText":" The forked process will have its own VM instance."},{"question":"# Q18. If EventEmitter is in scope, which of the following lines of code will have an event emitter emitting a change event?","options":[" EventEmitter.emit('change');"," EventEmitter.new().emit('change');"," (new EventEmitter()).emit('change');"," new EventEmitter('change');"," "," **Explanation:**"," "," *Because the EventEmitter is already in scope. No need to create new one.*"],"anwserIndex":0,"answerText":" EventEmitter.emit('change');"},{"question":"# Q19. Which of the following objects is a stream","options":[" process.uptime"," process.stdout"," process"," Buffer"," "," **Explanation:**"," "," *process.stdout is Buffer type.*"],"anwserIndex":1,"answerText":" process.stdout"},{"question":"# Q20. Which module variable holds the resolved aboslute path of the current module file?","options":[" __pathname"," __location"," __flder"," __filename"],"anwserIndex":3,"answerText":" __filename"},{"question":"# 21. If the child_process module methods are in scope, what is a current way to execute the command ps -ef using a child process?","options":[" spawn(\"ps -ef\")"," exec(\"ps -ef\")"," exec(\"ps\", \"-ef\")"," fork(\"ps -ef\")"],"anwserIndex":1,"answerText":" exec(\"ps -ef\")"},{"question":"# Q22.Which console method can be used to print the stack trace to the point of its execution?","options":[" stack"," trace"," debug"," print"],"anwserIndex":1,"answerText":" trace"},{"question":"# Q23.When you run JavaScript in a Node.js application, which of the following elements in a Node.js stack actually executes that JavaScript?","options":["  the libuv library","  the c-ares library","  the VM (like VS or Chakra)","  the repl module"],"anwserIndex":2,"answerText":"  the VM (like VS or Chakra)"},{"question":"# Q24. Looking at the code below, what does the console show?\n```\nconst http = require('http');\n const hostname = '127.0.0.1'; const port = 3000;\n const server = http.createServer((req, res) => {\n  res.statusCode = 200;  res.setHeader(\"Content-Type\", \"text/plain\");  res.end(\"Hello World\\n\");\n});\nserver.listen(port, hostname, () => { console.log(`server running at http://${hostname}:${port}/`); });\n\n```","options":[" server running at http://localhost:3000/"," server running at port 3000"," server running at http://localhost:4000/"," server running at http://127.0.0.1:3000/"],"anwserIndex":3,"answerText":" server running at http://127.0.0.1:3000/"},{"question":"# Q25.What is the purpose of the path module?","options":[" to provide utilities to play with file and directory paths"," to provide utilities to add and remove files"," It is a retiring module."," to provide utilities to test files"],"anwserIndex":0,"answerText":" to provide utilities to play with file and directory paths"},{"question":"# Q26.How do you make an HTTP server object active and listen to requests on certain ports?","options":[" server. start"," server.activate"," server.listen"," server. run"],"anwserIndex":2,"answerText":" server.listen"},{"question":"# Q27.What does the code shown below do?\n```\nconst fs = require('fs'); const os = require('os');\nconst system = os.platform(); const user = os.userInfo().username;\nfs.appendFile('hello.txt', `Hello ${user} on ${system}`, (err) => { if (err) throw err; console.log('The data was appended to file!');}\n);\n\n```","options":[" creates a text file hello.txt and appends customized text"," creates an image file"," console logs system information"," creates a file named data and append numbers"],"anwserIndex":0,"answerText":" creates a text file hello.txt and appends customized text"},{"question":"# Q28.How do you start a Node application, if the entry file is indexjs?","options":[" nodemon start"," start index.js"," node index.js"," node start"],"anwserIndex":2,"answerText":" node index.js"},{"question":"# Q29.What is the purpose of the file system (fs) module?","options":[" to provide methods to work with requests and responses"," to provide methods to work with files"," to provide methods to work with databases"," to find new file systems"],"anwserIndex":1,"answerText":" to provide methods to work with files"},{"question":"# Q30.What is the Node LTS version?","options":[" It is the current unstable version and is to be avoided."," It is the version that will be retired soon."," It is the version with the latest features."," It is the safest version for long-term support."],"anwserIndex":3,"answerText":" It is the safest version for long-term support."},{"question":"# Q31. Which of the following is NOT a valid stream in Node?","options":[" process. stdinfo"," process. stdin"," process. stdout"," process. stderr"],"anwserIndex":0,"answerText":" process. stdinfo"},{"question":"# Q32. You have a script.js file with the single line of code shown here. What will be the output of executing script.js with the node command?","options":["console.log(arguments);` ","ReferenceError: arguments is not defined ","an empty string ","undefined ","an object representing an array that has five elements"],"anwserIndex":4,"answerText":"an object representing an array that has five elements"},{"question":" Q33. Which choice is not a valid method on event emitters?","options":["start","on","once","off"],"anwserIndex":0,"answerText":"start"},{"question":" Q34. Which special object is an instance of EventEmitter?Which special object is an instance of null?","options":["process","Buffer","root","require"]},{"question":" Q35. What is the command to get a list of available commands for Node.js?What is the command to get a list of available commands for Node.js?","options":["node index.js -x","node -v","node -h","node index.js -h"],"anwserIndex":2,"answerText":"node -h"},{"question":" Q36. When a request event is received in the HTTP module, what is the type of the first argument passed to that event, usually named req?","options":["http.IncomingMessage","http.ServerRequest","http.ClientRequest","http.ServerResponse"],"anwserIndex":0,"answerText":"http.IncomingMessage"},{"question":" Q37. What are the arguments passed to the module wrapper function?","options":["exports, __filename, __dirname","exports, process, require, module, __filename, __dirname","exports, module, __filename, __dirname","exports, require, module, __filename, __dirname"],"anwserIndex":3,"answerText":"exports, require, module, __filename, __dirname"},{"question":" Q38. Which library provides Node.js with the event loop?","options":["V8","c-ares","libuv","events"],"anwserIndex":2,"answerText":"libuv"},{"question":" Q39. What does the .node file extension represent?","options":["a C++ file that can have a .node extension and that Node will be able to execute directly.","a C++ Addon file that is built with node-gyp","a JSON file that can have a .node extension as well as the .json extension","a JavaScript file that can have a .node extension as well as the .js extension"],"anwserIndex":1,"answerText":"a C++ Addon file that is built with node-gyp"},{"question":" Q40. What can you export with module.exports?","options":["only objects.","only functions","only variables and arrays","functions, objects, arrays, or anything you assign to the module"],"anwserIndex":3,"answerText":"functions, objects, arrays, or anything you assign to the module"},{"question":" Q41. Which core module in Node can you use to take advantage of multicore systems?","options":["os","util","cluster","net"],"anwserIndex":2,"answerText":"cluster"},{"question":" Q42. Which core Node module has wrappers for OpenSSL methods?","options":["SSL","hash","crypto","TLS"],"anwserIndex":2,"answerText":"crypto"},{"question":" Q43. Which line imports a promise-based version of the readFile method?","options":["const { readFile } = require(fs).promises","const { readFile } = require(fs)","const { readFilePromises: readFile } = require(fs)","const { readFile } = require(promises)"],"anwserIndex":0,"answerText":"const { readFile } = require(fs).promises"}]