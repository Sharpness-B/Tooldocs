[{"question":"# Q1. What is this code an example of?\n```\nlet val = (Double)6\n\n```","options":[" an error"," typecasting"," assignment"," initialization"],"anwserIndex":0,"answerText":" an error"},{"question":"# Q2. What is the error in this code?\n```\nlet x = 5\nguard x == 5 { return }\n\n```","options":[" The guard is missing the else."," Nothing is wrong."," The guard is missing a then."," The comparison is wrong."],"anwserIndex":0,"answerText":" The guard is missing the else."},{"question":"# Q3. What is the raw/underlying type of this enum?\n```\nenum Direction {\n  case north, south, east, west\n}\n\n```","options":[" There is none."," String"," Any"," Int"],"anwserIndex":0,"answerText":" There is none."},{"question":"# Q4. Why is dispatchGroup used in certain situations?","options":[" It allows multiple synchronous or asynchronous operations to run on different queues."," It allows track and control execution of multiple operations together."," It allows operations to wait for each other as desired."," all of these answers."],"anwserIndex":0,"answerText":" It allows multiple synchronous or asynchronous operations to run on different queues."},{"question":"# Q5. What is this code an example of?\n```\nlet val = 5\nprint(\"value is: \\(val)\")\n\n```","options":[" string interpolation"," string compilation"," method chaining"," string concatenation"],"anwserIndex":0,"answerText":" string interpolation"},{"question":"# Q6. What are the contents of vals after this code is executed?\n```\nvar vals = [10, 2]\nvals.sort { (s1, s2) -> Bool in\n  s1 > s2\n}\n\n```","options":[" [10, 2] "," [2, 10]"," nil"," This code contains an error"],"anwserIndex":0,"answerText":" [10, 2] "},{"question":"# Q7. What does this code print?\n```\ntypealias Thing = [String, Any]\nvar stuff: Thing\nprint(type(of: stuff))\n\n```","options":[" Dictionary<String, Any> (To print this than code in question has to be `typealias Thing = [String: Any]`)"," Dictionary"," ERROR (If code in question is really like that.)"," Thing"],"anwserIndex":2,"answerText":" ERROR (If code in question is really like that.)"},{"question":"# Q8. What is the value of y?\n```swift\nlet x = [\"1\", \"2\"].dropFirst()\nlet y = x[0]\n\n```","options":[" This code contains an error"," 1"," 2"," nil"],"anwserIndex":0,"answerText":" This code contains an error"},{"question":"# Q9. What is the value of test in this code?\n```swift\nvar test = 1 == 1\n\n```","options":[" TRUE"," YES"," 1"," This code contains an error"],"anwserIndex":0,"answerText":" TRUE"},{"question":"# Q10. What is the value of y?\n```swift\nvar x: Int?\nlet y = x ?? 5\n\n```","options":[" 5"," 0"," nil"," This code contains an error"],"anwserIndex":0,"answerText":" 5"},{"question":"# Q11. What is the type of this function?\n```swift\nfunc add(a: Int, b: Int) -> Int { return a+b }\n\n```","options":[" Int"," (Int, Int) -> Int"," Int<Optional>"," Functions don't have types."],"anwserIndex":1,"answerText":" (Int, Int) -> Int"},{"question":"# Q12. What is the correct was to call this function?\n```swift\nfunc myFunc(_ a: Int, b: Int) -> Int {\n  return a + b\n}\n\n```","options":[" myFunc(5, b: 6)"," myFunc(5, 6)"," myFunc(a: 5, b: 6)"," myFunc(a, b)"],"anwserIndex":0,"answerText":" myFunc(5, b: 6)"},{"question":"# Q13. The Codable protocol is \\***\\*\\_\\*\\***?","options":[" a combination of Encodable and Decodable"," not a true protocol <<<<---Possibly correct as it's a typealias of Encodable and Decodable"," required of all classes"," automatically included in all classes"],"anwserIndex":0,"answerText":" a combination of Encodable and Decodable"},{"question":"# Q13. What is the type of value1 in this code?\n```swift\nlet value1 = \"\\(\"test\".count)\"\n\n```","options":[" String"," Int"," null"," test.count"],"anwserIndex":0,"answerText":" String"},{"question":"# Q14. When a function takes a closure as a parameter, when do you want to mark is as escaping?","options":[" when it's executed after the function returns"," when it's scope is undefined"," when is's lazy loaded"," all of these answers"],"anwserIndex":0,"answerText":" when it's executed after the function returns"},{"question":"# Q15. What's wrong with this code?\n```\nclass Person {\n  var name: String\n  var address: String\n}\n\n```","options":[" Person has no initializers."," Person has no base class."," var name is not formatted corrrectly."," address is a keyword."],"anwserIndex":0,"answerText":" Person has no initializers."},{"question":"# Q16. What is the value of names after this code is executed?\n```\nlet names = [\"Bear\", \"Joe\", \"Clark\"]\nnames.map { (s) -> String in\n  return s.uppercased()\n}\n\n```","options":[" [\"BEAR\", \"JOE\", \"CLARK\"]"," [\"B\", \"J\", \"C\"]"," [\"Bear\", \"Joe\", \"Clark\"]"," This code contains an error."],"anwserIndex":2,"answerText":" [\"Bear\", \"Joe\", \"Clark\"]"},{"question":"# Q17. What describes this line of code?\n```\nlet val = 5\n\n```","options":[" a constant named val of type Int"," a variable named val of type item"," a constant named val of type Number"," a variable named val of type Int"],"anwserIndex":0,"answerText":" a constant named val of type Int"},{"question":"# Q18. What is the error in this code?\n```\nextension String {\n  var firstLetter: Character = \"c\" {\n    didSet {\n      print(\"new value\")\n    }\n  }\n}\n\n```","options":[" Extensions can't add properties. // although extensions technically can't contain stored properties"," Nothing is wrong with it."," didSet takes a parameter."," c is not a character."],"anwserIndex":0,"answerText":" Extensions can't add properties. // although extensions technically can't contain stored properties"},{"question":"# Q19. didSet and willSet are examples of `\\***\\*\\_\\*\\***`?","options":[" property observers"," key properties"," all of these answers"," newOld value calls"],"anwserIndex":0,"answerText":" property observers"},{"question":"# Q20. What is wrong with this code?\n```\nself.callback = {\n  self.attempts += 1\n  self.downloadFailed()\n}\n\n```","options":[" Use of self inside the closure causes retain cycle."," You cannot assign a value to closure in this manner."," You need to define the type of closure explicitly."," There is nothing wrong with this code."],"anwserIndex":0,"answerText":" Use of self inside the closure causes retain cycle."},{"question":"# Q21. How many values does vals have after this code is executed?\n```\nvar vals = Set<String> = [\"4\", \"5\", \"6\"]\nvals.insert(\"5\")\n\n```","options":[" three"," four"," eight"," This code contains an error."],"anwserIndex":0,"answerText":" three"},{"question":"# Q22. How can you avoid a strong reference cycle in a closure?","options":[" Use a capture list to set class instances of weak or unowned."," You can't, there will always be a danger of strong reference cycles inside a closure."," Initialize the closure as read-only."," Declare the closure variable as lazy."],"anwserIndex":0,"answerText":" Use a capture list to set class instances of weak or unowned."},{"question":"# Q23. How can you avoid a strong reference cycle in a closure?","options":[" an instance of any class"," all of these answers"," an instance of an optional type"," an instance of function type"],"anwserIndex":0,"answerText":" an instance of any class"},{"question":"# Q24. What is wrong with this code?\n```\nif let s = String.init(\"some string\") {\n  print(s)\n}\n\n```","options":[" This String initializer does not return an optional."," String does not have an initializer that can take a String."," = is not a comparison."," Nothing is wrong with this code."],"anwserIndex":0,"answerText":" This String initializer does not return an optional."},{"question":"# Q25. Which code snippet correctly creates a typealias closure?","options":[" typealias CustomClosure: () -> ()"," typealias CustomClosure { () -> () }"," typealias CustomClosure -> () -> ()"," typealias CustomClosure -> () {}"],"anwserIndex":0,"answerText":" typealias CustomClosure: () -> ()"},{"question":"# Q26. How do you reference class members from within a class?","options":[" self"," instance"," class"," this"],"anwserIndex":0,"answerText":" self"},{"question":"# Q27. All value types in Swift are \\***\\*\\_\\*\\*** under the hood?","options":[" structs"," classes"," optionals"," generics"],"anwserIndex":0,"answerText":" structs"},{"question":"# Q28. What is the correct was to ass a value to this array?\n```\nvar strings = [1, 2, 3]\n\n```","options":[" all of these answers"," strings.append(4)"," strings.insert(5, at: 1)"," strings += [5]"],"anwserIndex":0,"answerText":" all of these answers"},{"question":"# Q29. How many times will this loop be executed?\n```\nfor i in 0...100 {\n\tprint(i)\n}\n\n```","options":[" 0"," 101"," 99"," 100"],"anwserIndex":1,"answerText":" 101"},{"question":"# Q30. What can AnyObject represent?","options":[" an instance of any class"," an instance of an optional type"," an instance of a function type"," all of these answers"],"anwserIndex":0,"answerText":" an instance of any class"},{"question":"# Q31. What does this code print?\n```\ntypealias Thing = [String:Any]\nvar stuff : Thing\nprint(type(of:stuff))\n\n```","options":[" Dictionary"," ERROR"," Thing"," Dictionary<String, Any>"],"anwserIndex":3,"answerText":" Dictionary<String, Any>"},{"question":"# Q32. What is the value of test in this code?\n```\nvar test = 1 == 1\n\n```","options":[" TRUE"," 1"," This code contains an error."," YES"],"anwserIndex":0,"answerText":" TRUE"},{"question":"# Q33. What is the value of y?\n```\nvar x : Int?\nlet y = x ?? 5\n\n```","options":[" 0"," nil"," This code contains an error."," 5"],"anwserIndex":3,"answerText":" 5"},{"question":"# Q34. What is the value of y?\n```\nlet x = [\"1\",\"2\"].dropFirst()\nlet y = x[0]\n\n```","options":[" 1"," nil"," This code contains an error."," 2"],"anwserIndex":2,"answerText":" This code contains an error."},{"question":"# Q35. What is the value of t after this code is executed?\n```\nlet names = [\"Larry\",\"Sven\",\"Bear\"]\nlet t = names.enumerated().first().offset\n\n```","options":[" This code is invalid."," 0"," 1"," Larry"],"anwserIndex":0,"answerText":" This code is invalid."},{"question":"# Q36. What is the value of test after this code executes?\n```\nlet vt = (name: \"ABC\", val: 5)\nlet test = vt.0\n\n```","options":[" ABC"," 0"," 5"," name"],"anwserIndex":0,"answerText":" ABC"},{"question":"# Q37. What is the base class in this code?\n```\nclass LSN : MMM {\n}\n\n```","options":[" MMM"," LSN"," There is no base class."," This code is invalid."],"anwserIndex":0,"answerText":" MMM"},{"question":"# Q38. What does this code print to the console?\n```\nvar userLocation: String = \"Home\" {\n  willSet(newValue) {\n  print(\"About to set userLocation to \\(newValue)...\")\n  }\n\n  didSet {\n  if userLocation != oldValue {\n  print(\"userLocation updated with new value!\")\n  } else {\n  print(\"userLocation already set to that value...\")\n  }\n  }\n }\n\n userLocation = \"Work\"\n\n```","options":[" About to set userLocation to Work… userLocation updated to new value!"," About to set userLocation to Work… userLocation already set to that value…"," About to set userLocation to Home… userLocation updated to new value!"," ERROR"]},{"question":"# Q39. What must a convenience initializer call?","options":[" a base class convenience initializer"," either a designated or another convenience initializer"," a designated initializer"," none of these answers"],"anwserIndex":2,"answerText":" a designated initializer"},{"question":"# Q40. Which object allows you access to specify that a block of code runs in a background thread?","options":[" `DispatchQueue.visible"," `DispatchQueue.global"," `errorExample` need to be labeled as `throws`."," `DispatchQueue.background"],"anwserIndex":1,"answerText":" `DispatchQueue.global"},{"question":"# Q41. What is the inferred type of x?\n```\nlet x = [\"a\", \"b\", \"c\"]\n\n```","options":[" `String[]"," `Array<String>"," `Set<String>"," `Array<Character>"],"anwserIndex":1,"answerText":" `Array<String>"},{"question":"# Q42. What is the value of `oThings` after this code is executed?\n```\nlet nThings: [Any] = [1, \"2\", \"three\"]\nlet oThings = nThings.reduce(\"\") { \"\\($0)\\($1)\" }\n\n```","options":[" `11212three"," `115"," `12three"," Nothing, this code is invalid."],"anwserIndex":2,"answerText":" `12three"},{"question":"# Q43. How would you call a function that throws errors and also returns a value?","options":[" `!try"," `try?"," `try!"," `?try"],"anwserIndex":1,"answerText":" `try?"},{"question":"# Q44. What is wrong with this code?\n```\nprotocol TUI {\n\tfunc add(x1 : Int, x2 : Int) -> Int {\n\t\treturn x1 + x2\n\t}\n}\n\n```","options":[" Protocol functions cannot have return types."," Protocol functions cannot have implementations."," Nothing is wrong with it."," `add` is a reserved keyword."],"anwserIndex":1,"answerText":" Protocol functions cannot have implementations."},{"question":"# Q45. In this code, what are `wheels` and `doors` examples of?\n```\nclass Car {\n\tvar wheels: Int = 4\n\tlet doors = 4\n}\n\n```","options":[" class members"," This code is invalid."," class fields"," class properties"],"anwserIndex":3,"answerText":" class properties"},{"question":"# Q46. What is the value of `t` after this code is executed?\n```\nlet names = [\"Larry\", \"Sven\", \"Bear\"]\nlet t = names.enumerated().first().offset\n\n```","options":[" This code does not compile."," `0"," `1"," `Larry"],"anwserIndex":0,"answerText":" This code does not compile."},{"question":"# Q47. How do you designate a failable initializer?","options":[" `init?"," `deinit"," `init"," You can't."],"anwserIndex":2,"answerText":" `init"},{"question":"# Q48. What is printed when this code is executed?\n```\nlet dbl = Double.init(\"5a\")\nprint(dbl ?? \".asString()\")\n\n```","options":[" `five"," `5a"," `.asString()"," `5"],"anwserIndex":2,"answerText":" `.asString()"},{"question":"# Q49. In the function below, what are **this** and **toThat** examples of?\n\n```swift\nfunc add(this x: Int, toThat y: Int)->{}\n\n```","options":["none of these answers","local terms","argument labels","parameters names"],"anwserIndex":2,"answerText":"argument labels"},{"question":"# Q50. What can AnyObject represent?","options":["an instance of any class","an instance of function type","all of these answers","an instance of an optional type"],"anwserIndex":2,"answerText":"all of these answers"},{"question":"# Q51. What is wrong with this code?\n\n```swift\nif let s = String.init(\"some string\"){\n  print (s)\n}\n\n```","options":["Nothing is wrong with this code","= is not a comparison","String does not have an initializer that can take a String","This String initializer does not return an optional"],"anwserIndex":3,"answerText":"This String initializer does not return an optional"},{"question":"# Q52. What is wrong with this code?\n\n```swift\nfor (key, value) in [1: \"one\", 2: \"two\"]{\n  print(key, value)\n}\n\n```","options":["The interaction source is invalid","The interaction variable is invalid","There is nothing wrong with this code","The comma in the print is misplaced"],"anwserIndex":2,"answerText":"There is nothing wrong with this code"},{"question":"# Q53. Which of these choices is associated with unit testing?","options":["XCTest","- [X] all of these answers","@testable","XCAssert"]},{"question":"# Q54. In the code below, what is width an example of?\n\n```swift\nclass Square{\n  var height: Int = 0\n  var width : Int {\n    return height\n  }\n}\n\n```","options":["This code contains error","a closure","a computed property","lazy loading"],"anwserIndex":2,"answerText":"a computed property"},{"question":"# Q55. What data type is this an example of?\n\n```swift\nlet vals = (\"val\", 1)\n\n```","options":["a dictionary","a tuple","an optional","This code contains error"],"anwserIndex":1,"answerText":"a tuple"},{"question":"# Q56. What is wrong with this code?\n\n```swift\nvar x = 5\nx = 10.0\n\n```","options":["You cannot assign a Double to a variable of type Int","x is undefined","x is a constant","x has no type"],"anwserIndex":0,"answerText":"You cannot assign a Double to a variable of type Int"},{"question":"# Q57. What is the type of x: let x = try?\n\n```swift\nString.init(from: decoder)\n\n```","options":["String","String?","String!","try?"],"anwserIndex":1,"answerText":"String?"},{"question":"# Q58. What will this code print to the console?\n\n```swift\nvar items = [\"a\":1, \"b\":2, \"c\":\"test\"] as [String: Any]\nitems[\"c\"] = nil\nprint(items[\"c\"] as Any)\n\n```","options":["Any","test","1,2,3","nil"],"anwserIndex":3,"answerText":"nil"},{"question":"# Q59. What is wrong with this code?\n\n```swift\nlet val = 5.0 + 10\n\n```","options":["There is nothing wrong with this code","val is a constant and cannot be changed","5.0 and 10 are different types","There is no semicolon"],"anwserIndex":0,"answerText":"There is nothing wrong with this code"},{"question":"# Q60. How many parameters does the initializer for Test have?\n\n```swift\nstruct Test{\n  var score: Int\n  var date: Date\n}\n\n```","options":["zero","This code contains an error","two","Structs do not have initializers"],"anwserIndex":2,"answerText":"two"},{"question":"# Q61. What prints to the console when executing this code?\n\n```swift\nlet x = try? String.init(\"test\")\nprint(x)\n\n```","options":["nil","Nothing - this code contains an error","Optional(\"test\")","test"],"anwserIndex":2,"answerText":"Optional(\"test\")"},{"question":"# Q62. How can you sort this array?\n\n```swift\nvar vals = [1,2,3]\n\n```","options":["vals.sort { $0 < $1 }","vals.sort { (s1, s2) in s1 < s2 }","vals.sort(by: <)","all of these answers"],"anwserIndex":3,"answerText":"all of these answers"},{"question":"# Q63. What is printed when this code is executed?\n\n```swift\nlet dbl = Double.init(\"5a\")\nprint(dbl ?? \".asString()\")\n\n```","options":["5a","5","five","asString()"],"anwserIndex":3,"answerText":"asString()"},{"question":"# Q64. DispatchQueue.main.async takes a block that will be","options":["not executed","executed in the main queue","none of these answers","executed on the background thread"],"anwserIndex":1,"answerText":"executed in the main queue"},{"question":"# Q65. What is the value of test after this code executes?\n\n```swift\nlet vt = (name: \"ABC\", val: 5)\nlet test = vt.0\n\n```","options":["ABC","name","5","0"],"anwserIndex":0,"answerText":"ABC"},{"question":"# Q66. When is deinit called?","options":["When a class instance needs memory","All of these answers","When the executable code is finished","When a class instance is being removed from memory"],"anwserIndex":1,"answerText":"All of these answers"},{"question":"# Q67. How do you designated a failable initializer?","options":["You cannot","deinit","init?","init"],"anwserIndex":2,"answerText":"init?"},{"question":"# Q68. How do you declare an optional String?","options":["String?","Optional[String]","[String]?","?String"],"anwserIndex":0,"answerText":"String?"},{"question":"# Q69. Why is dispatchGroup used in certain situation?","options":["All of these answers","It allows multiple synchronous or asynchronous operations to run on different values","It allows operations to wait for each other as defined","It allows track and control execution of multiple operations together"],"anwserIndex":0,"answerText":"All of these answers"},{"question":"# Q70. What is the value of t after this code is executed?\n\n```swift\nlet names = [\"Larry\", \"Sven\", \"Bear\"]\nlet t = names.enumerated().first().offset\n\n```","options":["Larry","0","1","This code does not compile"],"anwserIndex":3,"answerText":"This code does not compile"},{"question":"# Q71. How many times this code will be executed?\n\n```swift\nfor i in [\"0\", \"1\"]{\n  print(i)\n}\n\n```","options":["one","- [X] two","three","This code does not compile"]},{"question":"# Q72. What does this code print?\n\n```swift\nlet names = [\"Bear\", \"Tony\", \"Svante\"]\nprint(names[1]+\"Bear\")\n\n```","options":["1Bear","BearBear","TonyBear","Nothing, this code is invalid"],"anwserIndex":2,"answerText":"TonyBear"}]